---
layout: post
title: Finding service outages with robust statistics
date: 2021-02-09T22:08:00-08:00
category: Engineering
tags:
  - monitoring
  - outliers
  - statistics
---

<script>
    import {onMount} from "svelte";
    import Table from "../../components/Table.svelte";
    import {mean, median, standardDeviation, medianAbsoluteDeviation} from "simple-statistics";

    const columns = [
        {
            name: "last update",
            format: (row) => row.last_update.slice(0, 16)
        },
        {
            name: "delta",
            format: (row) => row.delta
        }
    ];
    let data = []
    $: delta = data.map(row => row.delta);

    onMount(async () => {
        let resp = await fetch("assets/2021-02-09/probeinfo_status.json");
        data = await resp.json();
    })
</script>

_This post is interactive and may not render correctly without Javascript._

Here's a post with some math in it.

{#if data.length > 0}

<pre>{JSON.stringify(data.slice(0, 3), '', 2)}</pre>

<Table {data} {columns} paginationSize={8} />

The mean is {mean(delta).toFixed(1)} ($\mu$) with a standard deviation ($$\sigma$$) of {standardDeviation(delta).toFixed(1)}. We can determine how far a point is from the mean by computing a z-score.

$$
z = \frac{x - \mu}{\sigma}
$$

The median ($\tilde{\mu}$) is {median(delta)} with a median absolute deviation ($MAD$) of
{medianAbsoluteDeviation(delta)}. We can modify the z-score to give us a robust equivalent to the standard deviation.

$$
\tilde{z} = \frac{x - \tilde{\mu}}{k \cdot MAD}
$$

{/if}
